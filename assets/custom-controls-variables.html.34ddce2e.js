import{aa as o,B as r,C as n,A as a,N as e,I as l,ab as t,P as s}from"./app.db6f54ca.js";import"./vendor.8537dd4d.js";const d={},c=t('<h1 id="custom-controls-variables" tabindex="-1"><a class="header-anchor" href="#custom-controls-variables" aria-hidden="true">#</a> Custom controls variables</h1><h2 id="available-variables" tabindex="-1"><a class="header-anchor" href="#available-variables" aria-hidden="true">#</a> Available variables</h2><h3 id="screen-size-variables" tabindex="-1"><a class="header-anchor" href="#screen-size-variables" aria-hidden="true">#</a> Screen size variables</h3><ul><li><code>screen_width</code>: width of the screen.</li><li><code>screen_height</code>: height of the screen.</li></ul><h4 id="control-variables" tabindex="-1"><a class="header-anchor" href="#control-variables" aria-hidden="true">#</a> Control variables</h4><ul><li><code>width</code>: width of the control button itself.</li><li><code>height</code>: height of the control button itself.</li></ul><h4 id="position-variables" tabindex="-1"><a class="header-anchor" href="#position-variables" aria-hidden="true">#</a> Position variables</h4><ul><li><code>top</code>: top of the screen, default is 0.</li><li><code>left</code>: left of the screen, default is 0.</li><li><code>right</code>: right of the screen, calculated as <code>${screen_width} - ${width} - ${margin}</code>.</li><li><code>bottom</code>: bottom of the screen, calculated as <code>${screen_height} - ${height} - ${margin}</code>.</li></ul><h4 id="other-variables" tabindex="-1"><a class="header-anchor" href="#other-variables" aria-hidden="true">#</a> Other variables</h4><ul><li><code>margin</code>: margin, default is 2dp.</li></ul><h3 id="how-does-it-work" tabindex="-1"><a class="header-anchor" href="#how-does-it-work" aria-hidden="true">#</a> How does it work</h3><p>Currently, variables only apply for Dynamic X and Y, which is in format <code>${variable}</code>. For example</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;dynamicX&quot;: &quot;${screen_width} - ${width} * 2 + ${margin}&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>With these given properties:</p><ul><li>Screen width is <strong>1280</strong></li><li>Button width is <strong>100</strong></li><li>Margin is <strong>2dp</strong>, convert into pixels unit is <strong>4px</strong></li></ul><p>It will be converted into</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;dynamicX&quot;: &quot;1280 - 100 * 2 + 4&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',17),h=a("code",null,"x",-1),u=a("code",null,"dynamicX",-1),b={href:"https://lallafa.objecthunter.net/exp4j",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ControlData controlData = ...
controlData.x = new ExpressionBuilder(controlData.dynamicX).build().evaluate();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function m(p,g){const i=s("ExternalLinkIcon");return r(),n("div",null,[c,a("p",null,[e("Then, the "),h,e(" field (stored in the memory when pasted to a control json) is being calculated from "),u,e(" using "),a("a",b,[e("exp4j"),l(i)]),e(".")]),v])}const _=o(d,[["render",m],["__file","custom-controls-variables.html.vue"]]);export{_ as default};
